import discord
import io
import asyncio
from utils.logger import logger


class ImageButtonView(discord.ui.View):
    def __init__(self, prompt: str):
        super().__init__(timeout=180)  # –¢–∞–π–º–∞—É—Ç - 3 –º–∏–Ω—É—Ç—ã
        self.prompt = prompt

    @discord.ui.button(
            label="üîÅ Regenerate", 
            style=discord.ButtonStyle.primary)
    async def regenerate_button(
        self, 
        interaction: discord.Interaction, 
        button: discord.ui.Button
        ):
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ª–æ–≥–∏–∫—É –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        await interaction.response.defer(ephemeral=True)  # –°–æ–æ–±—â–∞–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç –ø—Ä–∏–¥—ë—Ç –ø–æ–∑–∂–µ

        button.disabled = True
        await interaction.message.edit(view=self)
        await interaction.followup.send("‚è≥ Generating a new image, please wait...", ephemeral=True)

        logger.info("üîÅ Regenerating image | Prompt: %s", self.prompt)
        start = asyncio.get_running_loop().time()

        # –ü–æ–ª—É—á–∞–µ–º –±–æ—Ç–∞ –∏ HF-–∫–ª–∏–µ–Ω—Ç —á–µ—Ä–µ–∑ interaction.client
        bot = interaction.client
        hf_client = bot.hf_client

        try:
            # –í—ã–ø–æ–ª–Ω—è–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å event loop
            new_image = await asyncio.to_thread(
                hf_client.generate_image, self.prompt
                )
            duration = asyncio.get_running_loop().time() - start
            logger.info("‚úÖ Image regenerated in %.2f sec | Prompt: %s", duration, self.prompt)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –±—É—Ñ–µ—Ä
            buf = io.BytesIO()
            new_image.save(buf, format="PNG")
            buf.seek(0)
            file = discord.File(fp=buf, filename="regenerated.png")

            button.disabled = False
            await interaction.message.edit(view=self)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            await interaction.followup.send(
                content=f"{interaction.user.mention} Here is your regenerated image!\n**Prompt:** {self.prompt}", file=file
                )
        except Exception as e:
            logger.error("‚ùå Failed to regenerate image | Prompt: %s | Error: %s", self.prompt, str(e))
            await interaction.followup.send(
                f"It seems something went wrong while regenerating image: {e}"
                )